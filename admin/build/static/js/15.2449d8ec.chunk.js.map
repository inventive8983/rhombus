{"version":3,"sources":["services/orders.js","components/shared-components/EllipsisDropdown/index.js","components/shared-components/AvatarStatus/index.js","views/app-views/queries/general.js","views/app-views/queries/courses.js","views/app-views/queries/index.js"],"names":["orderAPI","params","Promise","resolve","reject","axios","get","API_BASE_URL","then","response","data","catch","error","console","log","id","EllipsisDropdown","props","overlay","menu","placement","trigger","className","defaultProps","Orders","Select","Option","useHistory","useState","ListData","setListData","list","setList","useEffect","Axios","queries","err","message","tableColumns","title","dataIndex","sorter","a","b","utils","antdTableSorter","Flex","alignItems","justifyContent","mobileFlex","placeholder","prefix","SearchOutlined","onChange","e","value","currentTarget","searchArray","wildCardSearch","onSearch","columns","dataSource","rowKey","render","_","record","d","Date","date","getUTCDate","getUTCMonth","getUTCFullYear","Ecommerce","match","exact","from","url","to","path","component","General","Courses"],"mappings":"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","file":"static/js/15.2449d8ec.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {API_BASE_URL} from '../constants/ApiConstant'\r\n\r\nvar orderAPI = {}\r\n\r\norderAPI.getOrders = (params) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(`${API_BASE_URL}/cart/orders`)\r\n    .then(response => {\r\n      resolve(response.data)\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      reject(error)\r\n    })\r\n  })\r\n}\r\n\r\norderAPI.getOrder = (params) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(`${API_BASE_URL}/cart/order/${params.id}`)\r\n    .then(response => {\r\n      resolve(response.data)\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      reject(error)\r\n    })\r\n  })\r\n}\r\n\r\n\r\nexport default orderAPI","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, message } from 'antd';\r\nimport { EyeOutlined, FileExcelOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\nimport { List } from 'react-virtualized';\r\nimport orderAPI from '../../../services/orders'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { API_BASE_URL } from 'constants/ApiConstant';\r\n\r\n\r\nconst { Option } = Select\r\n\r\nconst paymentStatusList = ['TXN_SUCCESS', 'TXN_FAILED', 'TXN_PENDING']\r\n\r\nconst Orders = () => {\r\n\r\n\tlet history = useHistory();\r\n\r\n\tconst [ListData, setListData] = useState()\r\n\tconst [list, setList] = useState()\r\n\r\n\tuseEffect(() => {\r\n\t\tAxios.get(`${API_BASE_URL}/contact/general`).then(queries => {\r\n\t\t\tsetListData(queries.data)\r\n\t\t\tsetList(queries.data)\r\n\t\t\tconsole.log(queries);\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tmessage.error(\"Some error occured.\")\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst handleShowStatus = value => {\r\n\t\tif(value !== 'All') {\r\n\t\t\tconst key = 'status'\r\n\t\t\tconst data = utils.filterArray(ListData, key, value)\r\n\t\t\tsetList(data)\r\n\t\t} else {\r\n\t\t\tsetList(ListData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst viewInvoice = (id) => {\r\n\t\thistory.push(`/app/orders/invoice/${id}`)\r\n\t}\r\n\t\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'Name',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Email',\r\n\t\t\tdataIndex: 'email',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'email')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Phone Number',\r\n\t\t\tdataIndex: 'mobile',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'mobile')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Subject',\r\n\t\t\tdataIndex: 'subject',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'subject')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Message',\r\n\t\t\tdataIndex: 'message',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'message')\r\n\t\t},\r\n\t];\r\n\t\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : ListData\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* <Button type=\"primary\" icon={<FileExcelOutlined />} block>Export All</Button> */}\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id' \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Orders\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, message } from 'antd';\r\nimport { EyeOutlined, FileExcelOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\nimport { List } from 'react-virtualized';\r\nimport orderAPI from '../../../services/orders'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { API_BASE_URL } from 'constants/ApiConstant';\r\n\r\n\r\nconst { Option } = Select\r\n\r\nconst paymentStatusList = ['TXN_SUCCESS', 'TXN_FAILED', 'TXN_PENDING']\r\n\r\nconst Orders = () => {\r\n\r\n\tlet history = useHistory();\r\n\r\n\tconst [ListData, setListData] = useState()\r\n\tconst [list, setList] = useState()\r\n\r\n\tuseEffect(() => {\r\n\t\tAxios.get(`${API_BASE_URL}/contact/courses`).then(queries => {\r\n\t\t\tsetListData(queries.data)\r\n\t\t\tsetList(queries.data)\r\n\t\t}).catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tmessage.error(\"Some error occured.\")\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst handleShowStatus = value => {\r\n\t\tif(value !== 'All') {\r\n\t\t\tconst key = 'status'\r\n\t\t\tconst data = utils.filterArray(ListData, key, value)\r\n\t\t\tsetList(data)\r\n\t\t} else {\r\n\t\t\tsetList(ListData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'date',\r\n\t\t\trender: (_, record) => {\r\n\t\t\t\tvar d = new Date(record.date)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<span>{d.getUTCDate() + 1}/{d.getUTCMonth() + 1}/{d.getUTCFullYear()}</span>\r\n\t\t\t)},\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Name',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Phone Number',\r\n\t\t\tdataIndex: 'mobile',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'mobile')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Course',\r\n\t\t\tdataIndex: 'course',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'course')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'City',\r\n\t\t\tdataIndex: 'city',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'city')\r\n\t\t},\r\n\t];\r\n\t\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : ListData\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* <Button type=\"primary\" icon={<FileExcelOutlined />} block>Export All</Button> */}\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id' \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Orders\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport General from './general'\r\nimport Courses from './courses'\r\n\r\nconst Ecommerce = props => {\r\n  const { match } = props\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Redirect exact from={`${match.url}`} to={`${match.url}/general`} />\r\n\t\t\t<Route path={`${match.url}/general`} component={General} />\r\n\t\t\t<Route path={`${match.url}/courses`} component={Courses} />\r\n\t\t</Switch>\r\n\t)\r\n}\r\n\r\nexport default Ecommerce\r\n\r\n"],"sourceRoot":""}