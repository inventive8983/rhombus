{"version":3,"sources":["constants/ApiConstant.js","services/media.js","views/app-views/media/slider.js"],"names":["API_BASE_URL","BASE_URL","mediaAPI","params","Promise","resolve","reject","axios","get","folder","then","response","data","catch","error","console","log","delete","filename","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","Gallery","state","previewVisible","previewImage","fileList","componentDidMount","getGallery","files","map","index","uid","name","status","url","setState","handleCancel","handleDelete","e","res","message","success","err","handlePreview","a","preview","originFileObj","handleChange","this","uploadButton","className","alignItems","justifyContent","Title","strong","img","src","style","height","maxHeight","objectFit","action","listType","onPreview","onChange","onRemove","visible","footer","onCancel","alt","width","React","Component"],"mappings":"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","file":"static/js/21.0a381fb7.chunk.js","sourcesContent":["// export const API_BASE_URL = 'http://localhost:4000/api'\r\nexport const API_BASE_URL = 'https://rhombusedu.herokuapp.com/api'\r\n// export const BASE_URL = 'http://localhost:4000/'\r\nexport const BASE_URL = 'https://rhombusedu.herokuapp.com/'","import axios from 'axios'\r\nimport {API_BASE_URL} from '../constants/ApiConstant'\r\n\r\nvar mediaAPI = {}\r\n\r\nmediaAPI.getGallery = (params) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(`${API_BASE_URL}/general/media/${params.folder}`)\r\n    .then(response => {\r\n      resolve(response.data)\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      reject(error)\r\n    })\r\n  })\r\n}\r\n\r\nmediaAPI.delete = (params) => {\r\n    return new Promise((resolve, reject) => {\r\n      axios.delete(`${API_BASE_URL}/general/media/${params.folder}/${params.filename}`)\r\n      .then(response => {\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\nexport default mediaAPI","import { Card, Upload, Modal, message, Typography, Carousel, Image } from 'antd'\r\nimport Flex from '../../../components/shared-components/Flex';\r\nimport React from 'react'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {BASE_URL, API_BASE_URL} from '../../../constants/ApiConstant'\r\nimport mediaAPI from '../../../services/media'\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  } \r\n\r\n  \r\n  \r\n  class Gallery extends React.Component {\r\n    state = {\r\n      previewVisible: false,\r\n      previewImage: '',\r\n      fileList: [],\r\n    };\r\n    \r\n    componentDidMount = () => {\r\n        mediaAPI.getGallery({folder: 'covers'}).then(files => {\r\n            files = files.map((file, index) => { return {\r\n                uid: index,\r\n                name: file,\r\n                status: 'done',\r\n                url: `${BASE_URL}media/covers/${file}`\r\n            }})\r\n\r\n            console.log(files);\r\n            this.setState({fileList: files})\r\n        })\r\n    }\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handleDelete = (e) => {\r\n        mediaAPI.delete({folder: 'covers', filename: e.name}).then(res => {\r\n            message.success(\"Successfully deleted\");\r\n        })\r\n        .catch(err => {\r\n            message.error(\"Some error occured\")\r\n        })\r\n    }\r\n  \r\n    handlePreview = async file => {\r\n      if (!file.url && !file.preview) {\r\n        file.preview = await getBase64(file.originFileObj);\r\n      }\r\n  \r\n      this.setState({\r\n        previewImage: file.url || file.preview,\r\n        previewVisible: true,\r\n      });\r\n    };\r\n    \r\n    handleChange = ({ fileList }) => this.setState({ fileList });\r\n  \r\n    render() {\r\n      const { previewVisible, previewImage, fileList } = this.state;\r\n      const uploadButton = (\r\n        <div>\r\n          <PlusOutlined />\r\n          <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n      );\r\n      return (\r\n          <>\r\n          <Flex className=\"p-3\" alignItems=\"center\" justifyContent=\"between\">\r\n                <Typography.Title strong>Slider Images</Typography.Title>\r\n            </Flex>\r\n            <Card>\r\n                <Carousel>\r\n                  {this.state.fileList.map(img => <div>\r\n                    <img src={img.url} className=\"w-100\" style={{height:\"600px\",maxHeight:\"600px\", objectFit: \"cover\"}}></img>\r\n                  </div>)}\r\n                </Carousel>\r\n            </Card>\r\n        <Card>\r\n            <div className=\"clearfix\">\r\n          <Upload\r\n            action={`${API_BASE_URL}/upload/image/covers`}\r\n            listType=\"picture-card\"\r\n            fileList={fileList}\r\n            onPreview={this.handlePreview}\r\n            onChange={this.handleChange}\r\n            onRemove={this.handleDelete}\r\n          >\r\n            {uploadButton}\r\n          </Upload>\r\n          <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n          </Modal>\r\n        </div>\r\n        </Card>\r\n        \r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Gallery\r\n"],"sourceRoot":""}